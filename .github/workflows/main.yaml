name: Test and release mkdocs_mcp

on:
  push:
  pull_request:

jobs:
  linters:
    name: linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      
      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run ruff
        run: uv run ruff check

      - name: Run ruff format
        run: uv run ruff format --check

      - name: Run mypy
        run: uv run mypy . --pretty --show-error-context


  pytest:
    name: Testing on Python ${{ matrix.python-version }} (${{ matrix.platform}})
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python-version: [ '3.12']
        platform: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=nornir_conditional_runner --cov-report=xml --cov-report=term-missing

      - name: Upload coverage report artifact
        if: matrix.platform == 'macos-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  release:
    name: Releasing to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [linters, pytest]
    runs-on: ubuntu-latest

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: build release
        run: uv build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/*